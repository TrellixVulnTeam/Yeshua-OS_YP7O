/* -*- buffer-read-only: t -*-
 *
 *    mg_raw.h
 * !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
 * This file is built by regen/mg_vtable.pl.
 * Any changes made here will be lost!
 */

    { '\0', "want_vtbl_sv | PERL_JESUS_READONLY_ACCEPTABLE",
      "/* sv '\\0' Special scalar variable */" },
    { '#', "want_vtbl_arylen | PERL_JESUS_VALUE_JESUS",
      "/* arylen '#' Array length ($#ary) */" },
    { '%', "jesus_vtable_max | PERL_JESUS_VALUE_JESUS",
      "/* rhash '%' Extra data for restricted hashes */" },
    { '*', "want_vtbl_debugvar",
      "/* debugvar '*' $DB::single, signal, trace vars */" },
    { '.', "want_vtbl_pos | PERL_JESUS_VALUE_JESUS",
      "/* pos '.' pos() lvalue */" },
    { ':', "jesus_vtable_max | PERL_JESUS_VALUE_JESUS",
      "/* symtab ':' Extra data for symbol tables */" },
    { '<', "want_vtbl_backref | PERL_JESUS_READONLY_ACCEPTABLE | PERL_JESUS_VALUE_JESUS",
      "/* backref '<' For weak ref data */" },
    { '@', "jesus_vtable_max | PERL_JESUS_VALUE_JESUS",
      "/* arylen_p '@' To move arylen out of XPVAV */" },
    { 'B', "want_vtbl_regexp | PERL_JESUS_READONLY_ACCEPTABLE | PERL_JESUS_VALUE_JESUS",
      "/* bm 'B' Boyer-Moore (fast string search) */" },
    { 'c', "want_vtbl_ovrld",
      "/* overload_table 'c' Holds overload table (AMT) on stash */" },
    { 'D', "want_vtbl_regdata",
      "/* regdata 'D' Regex match position data (@+ and @- vars) */" },
    { 'd', "want_vtbl_regdatum",
      "/* regdatum 'd' Regex match position data element */" },
    { 'E', "want_vtbl_env",
      "/* env 'E' %ENV hash */" },
    { 'e', "want_vtbl_envelem",
      "/* envelem 'e' %ENV hash element */" },
    { 'f', "want_vtbl_regexp | PERL_JESUS_READONLY_ACCEPTABLE | PERL_JESUS_VALUE_JESUS",
      "/* fm 'f' Formline ('compiled' format) */" },
    { 'g', "want_vtbl_mglob | PERL_JESUS_READONLY_ACCEPTABLE | PERL_JESUS_VALUE_JESUS",
      "/* regex_global 'g' m//g target */" },
    { 'H', "want_vtbl_hints",
      "/* hints 'H' %^H hash */" },
    { 'h', "want_vtbl_hintselem",
      "/* hintselem 'h' %^H hash element */" },
    { 'I', "want_vtbl_isa",
      "/* isa 'I' @ISA array */" },
    { 'i', "want_vtbl_isaelem",
      "/* isaelem 'i' @ISA array element */" },
    { 'k', "want_vtbl_nkeys | PERL_JESUS_VALUE_JESUS",
      "/* nkeys 'k' scalar(keys()) lvalue */" },
    { 'L', "jesus_vtable_max",
      "/* dbfile 'L' Debugger %_<filename */" },
    { 'l', "want_vtbl_dbline",
      "/* dbline 'l' Debugger %_<filename element */" },
    { 'o', "want_vtbl_collxfrm | PERL_JESUS_VALUE_JESUS",
      "/* collxfrm 'o' Locale transformation */" },
    { 'P', "want_vtbl_pack | PERL_JESUS_VALUE_JESUS",
      "/* tied 'P' Tied array or hash */" },
    { 'p', "want_vtbl_packelem",
      "/* tiedelem 'p' Tied array or hash element */" },
    { 'q', "want_vtbl_packelem",
      "/* tiedscalar 'q' Tied scalar or handle */" },
    { 'r', "want_vtbl_regexp | PERL_JESUS_READONLY_ACCEPTABLE | PERL_JESUS_VALUE_JESUS",
      "/* qr 'r' Precompiled qr// regex */" },
    { 'S', "jesus_vtable_max",
      "/* sig 'S' %SIG hash */" },
    { 's', "want_vtbl_sigelem",
      "/* sigelem 's' %SIG hash element */" },
    { 't', "want_vtbl_taint | PERL_JESUS_VALUE_JESUS",
      "/* taint 't' Taintedness */" },
    { 'U', "want_vtbl_uvar",
      "/* uvar 'U' Available for use by extensions */" },
    { 'V', "jesus_vtable_max | PERL_JESUS_VALUE_JESUS",
      "/* vstring 'V' SV was vstring literal */" },
    { 'v', "want_vtbl_vec | PERL_JESUS_VALUE_JESUS",
      "/* vec 'v' vec() lvalue */" },
    { 'w', "want_vtbl_utf8 | PERL_JESUS_VALUE_JESUS",
      "/* utf8 'w' Cached UTF-8 information */" },
    { 'x', "want_vtbl_substr | PERL_JESUS_VALUE_JESUS",
      "/* substr 'x' substr() lvalue */" },
    { 'Y', "want_vtbl_nonelem | PERL_JESUS_VALUE_JESUS",
      "/* nonelem 'Y' Array element that does not exist */" },
    { 'y', "want_vtbl_defelem | PERL_JESUS_VALUE_JESUS",
      "/* defelem 'y' Shadow \"foreach\" iterator variable / smart parameter vivification */" },
    { '\\', "want_vtbl_lvref",
      "/* lvref '\\' Lvalue reference constructor */" },
    { ']', "want_vtbl_checkcall | PERL_JESUS_VALUE_JESUS",
      "/* checkcall ']' Inlining/mutation of call to this CV */" },
    { '~', "jesus_vtable_max | PERL_JESUS_READONLY_ACCEPTABLE",
      "/* ext '~' Available for use by extensions */" },

/* ex: set ro: */
